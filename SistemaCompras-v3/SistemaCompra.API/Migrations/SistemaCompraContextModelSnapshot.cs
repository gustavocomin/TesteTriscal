// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaCompra.Infra.Data;

namespace SistemaCompra.API.Migrations
{
    [DbContext(typeof(SistemaCompraContext))]
    partial class SistemaCompraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SistemaCompra.Domain.ProdutoAggregate.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Preco")
                        .HasColumnName("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Produto");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec195a24-f7c4-4656-b7a4-044e2b16fa46"),
                            Categoria = 1,
                            Descricao = "Descricao01",
                            Nome = "Produto01",
                            Preco = 100m,
                            Situacao = 1
                        });
                });

            modelBuilder.Entity("SistemaCompra.Domain.SolicitacaoCompraAggregate.CondicaoPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CondicaoPagamento");

                    b.HasData(
                        new
                        {
                            Id = new Guid("249dc498-36c9-424f-ba23-a5ee8f3ad389"),
                            Valor = 30
                        },
                        new
                        {
                            Id = new Guid("dc199f14-9182-40c3-ba96-41b742c7f448"),
                            Valor = 30
                        });
                });

            modelBuilder.Entity("SistemaCompra.Domain.SolicitacaoCompraAggregate.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Qtde")
                        .HasColumnType("int");

                    b.Property<Guid?>("SolicitacaoCompraId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("SolicitacaoCompraId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("SistemaCompra.Domain.SolicitacaoCompraAggregate.NomeFornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("NomeFornecedor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0511ce33-78e7-472d-a297-2d0b7438c2bb")
                        },
                        new
                        {
                            Id = new Guid("9c9a03dd-1704-4856-9e14-477ebf7a6c38")
                        });
                });

            modelBuilder.Entity("SistemaCompra.Domain.SolicitacaoCompraAggregate.SolicitacaoCompra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CondicaoPagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdCondicaoPagamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNomeFornecedor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuarioSolicitante")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NomeFornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<Guid?>("UsuarioSolicitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CondicaoPagamentoId");

                    b.HasIndex("NomeFornecedorId");

                    b.HasIndex("UsuarioSolicitanteId");

                    b.ToTable("SolicitacaoCompra");

                    b.HasData(
                        new
                        {
                            Id = new Guid("36152e5e-dbbb-4830-b8ea-edad75407a69"),
                            Data = new DateTime(2023, 5, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            IdCondicaoPagamento = new Guid("dc199f14-9182-40c3-ba96-41b742c7f448"),
                            IdNomeFornecedor = new Guid("9c9a03dd-1704-4856-9e14-477ebf7a6c38"),
                            IdUsuarioSolicitante = new Guid("c7535326-d2c5-4394-9f49-97d7b868088d"),
                            Situacao = 1
                        });
                });

            modelBuilder.Entity("SistemaCompra.Domain.SolicitacaoCompraAggregate.UsuarioSolicitante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UsuarioSolicitante");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2850c53d-3751-4358-bbba-0a0a783427e0")
                        },
                        new
                        {
                            Id = new Guid("c7535326-d2c5-4394-9f49-97d7b868088d")
                        });
                });

            modelBuilder.Entity("SistemaCompra.Domain.SolicitacaoCompraAggregate.Item", b =>
                {
                    b.HasOne("SistemaCompra.Domain.ProdutoAggregate.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");

                    b.HasOne("SistemaCompra.Domain.SolicitacaoCompraAggregate.SolicitacaoCompra", null)
                        .WithMany("Itens")
                        .HasForeignKey("SolicitacaoCompraId");
                });

            modelBuilder.Entity("SistemaCompra.Domain.SolicitacaoCompraAggregate.SolicitacaoCompra", b =>
                {
                    b.HasOne("SistemaCompra.Domain.SolicitacaoCompraAggregate.CondicaoPagamento", "CondicaoPagamento")
                        .WithMany()
                        .HasForeignKey("CondicaoPagamentoId");

                    b.HasOne("SistemaCompra.Domain.SolicitacaoCompraAggregate.NomeFornecedor", "NomeFornecedor")
                        .WithMany()
                        .HasForeignKey("NomeFornecedorId");

                    b.HasOne("SistemaCompra.Domain.SolicitacaoCompraAggregate.UsuarioSolicitante", "UsuarioSolicitante")
                        .WithMany()
                        .HasForeignKey("UsuarioSolicitanteId");
                });
#pragma warning restore 612, 618
        }
    }
}
